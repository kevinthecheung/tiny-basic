;
;
;  STATEMENT EXECUTOR WRITTEN IN IL (INTERPRETIVE LANGUAGE)
;  THIS IS WRITTEN IN MACROS FOR THE INTEL INTELEC 8/MOD 80
;  SYSTEM USING INTEL'S ASSEMBLER.
;
;  CONTROL SECTION
;
START:	INIT		;INITIALIZE
ERRENT: NLINE		;WRITE A CR-LF
CO:	GETLN		;WRITE PROMPT AND GET A LINE
	TSTL	XEC	;IF NO LINE NUMBER GO EXECUTE IT
	INSRT		;INSERT OR DELETE THE LINE
	IJMP	CO	;LOOP FOR ANOTHER LINE
XEC:	XINIT		;INITIALIZE FOR EXECUTION
;
;
;  STATEMENT EXECUTOR
;
STMT:	TST	S1	;CHECK FOR 'LET'
	DB	'LE','T' OR 200O
SE1:	TSTV	SE1	;ERROR IF NO VARIABLE!
SE2:	TST	SE2	;ERROR IF NO "="
	DB	'=' OR 200O
	ICALL	EXPR	;PUT EXPRESSION ON AESTK
	DONE		;CHECK FOR CR LINE TERMINATOR
	STORE		;PUT VALUE OF EXPRESSION IN ITS CELL
	NXT		;CONTINUE NEXT LINE
;
;
S1:	TST	S3	;CHECK FOR 'GO'
	DB	'G','O' OR 200O
	TST	S2	;CHECK FOR 'GOTO'
	DB	'T','O' OR 200O
	ICALL	EXPR	;GET THE LABEL
	DONE		;CHECK FOR CR LINE TERMINATOR
	XFER		;DO A 'GOTO' TO THE LABEL
;
;
S2:	TST	S2	;CHECK FOR 'GOSUB', FAILURE IS AN ERROR!
	DB	'SU','B' OR 200O
	ICALL	EXPR	;PUT EXPRESSION ON AESTK
	DONE		;CHECK FOR CR LINE TERMINATOR
	SAV		;SAVE NEXT LINE NUMBER IN BASIC TEXT
	XFER		;DO A 'GOSUB' TO THE LABEL
;
;
S3:	TST	S8	;CHECK FOR 'PRINT'
	DB	'PRIN','T' OR 200O
S4:	TST	S7	;CHECK FOR '"' TO BEGIN A STRING
	DB	'"' OR 200O
	PRS		;PRINT THE DATA ENCLOSED IN QUOTES
S5:	TST	S6	;',' MEANS MORE TO COME
	DB	',' OR 200O
	SPC		;SPACE TO NEXT ZONE
	HOP	S4	;GO BACK FOR MORE
S6:	DONE		;CHECK FOR CR LINE TERMINATOR
	NXT		;CONTINUE NEXT LINE
;
;
S8:	TST	S9	;CHECK FOR 'IF'
	DB	'I','F' OR 200O
	ICALL	EXPR	;GET THE FIRST EXPRESSION
	ICALL	RELOP	;GET THE RELATIONAL OPERATOR
	ICALL	EXPR	;GET THE SECOND EXPRESSION
S8A:	TST	S8A	;CHECK FOR 'THEN'
	DB	'THE','N' OR 200O
	CMPR		;IF NOT TRUE CONTINUE NEXT LINE
	IJMP	STMT	;IF TRUE PROCESS THE REST OF THIS LINE
;
;
S9:	TST	S12	;CHECK FOR 'INPUT'
	DB	'INPU','T' OR 200O
S10:	ICALL	VAR	;GET THE VARIABLE'S INDEX
	INNUM		;GET THE NUMBER FROM THE TELETYPE
	STORE		;PUT THE VALUE OF THE VARIABLE IN ITS CELL
	TST	S11	;',' MEANS MORE DATA
	DB	',' OR 200O
S11:	DONE		;CHECK FOR CR LINE TERMINATOR
	NXT		;CONTINUE NEXT LINE
;
;
S12:	TST	S13	;CHECK FOR 'RETURN'
	DB	'RETUR','N' OR 200O
	DONE		;CHECK FOR CR LINE TERMINATOR
	RSTR		;RETURN TO CALLER
;
;
S13:	TST	S14	;CHECK FOR 'END'
	DB	'EN','D' OR 200O
	FIN		;GO BACK TO CONTROL MODE
;
;
S14:	TST	S15	;CHECK FOR 'LIST'
	DB	'LIS','T' OR 200O
	DONE		;CHECK FOR CR LINE TERMINATOR
	LST		;TYPE OUT THE BASIC PROGRAM
	NXT		;CONTINUE NEXT LINE
;
;
S15:	TST	S16	;CHECK FOR 'RUN'
	DB	'RU','N' OR 200O
	DONE		;CHECK FOR CR LINE TERMINATOR
	NXT		;CONTINUE NEXT LINE
;
;
S16:	TST	S16	;CHECK FOR 'CLEAR', FAILURE IS AN ERROR!
	DB	'CLEA','R' OR 200O
	IJMP	START	;REINITIALIZE EVERYTHING!
;
;
;
;  INTERPRETIVE LANGUAGE SUBROUTINES
;
EXPR:	TST	E0	;TEST FOR UNARY '-'
	DB	'-' OR 200O
	ICALL	TERM	;PUT TERM ON AESTK
	NEG		;NEGATE VALUE ON AESTK
	HOP	E1	;GO GET A TERM
;
E0:	TST	E01	;TEST FOR UNARY '+'
	DB	'+' OR 200O
E01:	ICALL	TERM	;PUT TERM ON AESTK
E1:	TST	E2	;TEST FOR ADDITION
	DB	'+' OR 2000
	ICALL	TERM	;GET SECOND TERM
	ADD		;PUT SUM OF TERMS ON AESTK
	HOP	E01	;LOOP AROUND FOR MORE
;
E2:	TST	E3	;TEST FOR SUBTRACTION
	DB	'-' OR 200O
	ICALL	TERM	;GET SECOND TERM
	SUB		;PUT DIFFERENCE OF TERMS ON AESTK
	HOP	E1	;LOOP AROUND FOR MORE
;
E3:	RTN		;THIS CAN BE RECURSIVE
;
;
;
TERM:	ICALL	FACT	;GET ONE FACTOR
T0:	TST	T1	;TEST FOR MULTIPLICATION
	DB	'*' OR 200O
	ICALL	FACT	;GET A FACTOR
	MPY		;PUT THE PRODUCT ON AESTK
	HOP	T0	;LOOP AROUND FOR MORE
;
T1:	TST	T2	;TEST FOR DIVISION
	DB	'/' OR 200O
	ICALL	FACT	;GET THE QUOTIENT
	DIV		;PUT QUOTIENT ON AESTK
	HOP	T0	;LOOP FOR MORE
;
T2:	RTN		;RETURN TO CALLER
;
;
;
FACT:	TSTV	F0	;TEST FOR VARIABLE
	IND		;GET INDEX OF THE VARIABLE
	RTN
F0:	TSTN	F1	;TEST FOR NUMBER
	RTN
F1:	TST	F1	;ERROR IF ITS NOT A '('
	DB	'(' OR 200O
	ICALL	EXPR	;THIS IS A RECURSIVE PROCESS
;
FE1:	TST	FE1	;EVERY '(' HAS TO HAVE A ')'
	DB	')' OR 200O
	RTN
;
;
;
RELOP:	TST	R0	;CHECK FOR '='
	DB	'=' OR 200O
	LIT	0
	RTN
;
R0:	TST	R4	;CHECK FOR '<'
	DB	'<' OR 200O
	TST	R1
	DB	'=' OR 200O
	LIT	2
	RTN
;
R1:	TST	R3	;CHECK FOR '>'
	DB	'>' OR 200O
	LIT	3
	RTN
;
R3:	LIT	1
	RTN
;
R4:	TST	R4
	DB	'>' OR 200O
	TST	R5
	DB	'=' OR 200O
	LIT	5
	RTN
;
R5:	TST	R6
	DB	'<'
	LIT	3
	RTN
;
R6:	LIT	4
	RTN
